@page "/subscribers/list"
@attribute [Authorize]

@inject HttpClientX http
@inject AuthenticationStateProvider _auth

<div class="m-4 text-center">
    @if (mainCity != null && cities != null)
    {
        <select @onchange="CityChanged">
            <option value="all">همه</option>
            <option value="@mainCity.Id" selected>@mainCity.Name</option>
            <option value="others">سایر شهرستان ها</option>
            @foreach (var city in cities.Where(c => c.Id != mainCity.Id))
            {
                <option value="@city.Id">@city.Name</option>
            }
        </select>
    }
</div>
<div class="mt-4 table-responsive">
    @if (subscribers == null)
    {
        <Loading />
    }
    else
    {
        <ObjectTable Data="subscribers" LinkColumns="linkColumns.ToArray()" />
    }
</div>

@code {
    private List<ObjectTable<ClientSubscriber>.LinkColumn> linkColumns = new List<ObjectTable<ClientSubscriber>.LinkColumn>
    {
        new ObjectTable<ClientSubscriber>.LinkColumn { Text = "جزئیات", FieldName = nameof(ClientSubscriber.Id), Link = "/subscribers/details/{Id}" }
    };

    private City mainCity;
    private List<City> cities;
    private List<ClientSubscriber> subscribers;

    protected override async Task OnInitializedAsync()
    {
        var auth = (AuthStateProvider)_auth;
        var user = await auth.GetUser();
        if (user.HasPermission(Permission.ChangeSubscribers))
        {
            linkColumns.Add(new ObjectTable<ClientSubscriber>.LinkColumn
            {
                Text = "ویرایش",
                FieldName = nameof(ClientSubscriber.Id),
                Link = "/subscribers/edit/{Id}"
            });
        }

        mainCity = await http.GetFromJsonAsync<City>("Place/MainCity");
        cities = await http.GetFromJsonAsync<List<City>>("Place/CitiesList");
        subscribers = await http.GetFromJsonAsync<List<ClientSubscriber>>("Subscriber/List?city=" + mainCity.Id);
    }

    private async Task CityChanged(ChangeEventArgs e)
    {
        subscribers = null;
        subscribers = await http.GetFromJsonAsync<List<ClientSubscriber>>("Subscriber/List?city=" + e.Value);
    }
}
