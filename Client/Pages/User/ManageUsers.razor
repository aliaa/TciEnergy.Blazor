@page "/user/manage"
@attribute [Authorize(nameof(Permission.ManageUsers))]
@inject HttpClientX http
@inject IToastService toast
@inject IModalService modal

<div class="container">
    <h3>مدیریت کاربران</h3>
    @if (users == null)
    {
        <Loading />
    }
    else
    {
        <div class="row mt-5">
            <div class="col-md-4 form-group">
                <div>
                    <button class="btn btn-info" @onclick="ShowNewUserModal">ایجاد کاربر جدید</button>
                </div>
                <div class="form-group mt-5">
                    <label>کاربر</label>
                    <select class="form-control" @onchange="SelectedUserChanged">
                        <option value="">انتخاب کنید...</option>
                        @foreach (var item in users)
                        {
                            <option value="@item.Id" selected="@(item.Id == selectedUser?.Id)">@item.DisplayName</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col-md-4">
                @if (selectedUser != null)
                {
                    <div class="form-group">
                        <Label For="() => selectedUser.FirstName" />
                        <input type="text" @bind-value="selectedUser.FirstName" class="form-control" />
                    </div>
                    <div class="form-group">
                        <Label For="() => selectedUser.LastName" />
                        <input type="text" @bind-value="selectedUser.LastName" class="form-control" />
                    </div>
                    <div class="form-group">
                        <Label For="() => selectedUser.Username" />
                        <p class="form-control">@selectedUser.Username</p>
                    </div>
                    <div class="form-group">
                        <Label For="() => selectedUser.IsAdmin" />
                        <p class="form-control">@(selectedUser.IsAdmin ? "بلی" : "خیر")</p>
                    </div>
                    <div class="form-group">
                        <Label For="() => selectedUser.Permissions" />
                        <div>
                            <CheckBoxList Data="DisplayUtils.GetEnumValues<Permission>()" TextField="(p) => DisplayUtils.DisplayName(p)"
                                          SelectedValues="selectedPermissions" />
                        </div>
                    </div>
                    <div class="form-group mt-4">
                        <button class="btn btn-primary" @onclick="Save">ذخیره</button>

                    </div>
                }
            </div>
        </div>
    }
</div>

@code {
    private List<ClientAuthUser> users;
    private ClientAuthUser selectedUser;
    private List<string> selectedPermissions;

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task LoadUsers()
    {
        users = await http.GetFromJsonAsync<List<ClientAuthUser>>("Account/List");
    }

    private void SelectedUserChanged(ChangeEventArgs e)
    {
        selectedUser = users.FirstOrDefault(u => u.Id == e.Value.ToString());
        if (selectedUser == null)
            selectedPermissions = null;
        else
            selectedPermissions = selectedUser.Permissions.Select(p => p.ToString()).ToList();
    }

    private async Task ShowNewUserModal()
    {
        var modalShow = modal.Show<NewUser>("کاربر جدید");
        var result = await modalShow.Result;
        if (!result.Cancelled)
        {
            var user = (NewUserVM)result.Data;
            await LoadUsers();
            selectedUser = users.FirstOrDefault(u => u.Username == user.Username);
            selectedPermissions = new List<string>();
        }
    }

    private async Task Save()
    {
        selectedUser.Permissions = selectedPermissions.Select(p => Enum.Parse<Permission>(p)).ToList();
        try
        {
            await http.PostAsJsonAsync("Account/Save", selectedUser);
            toast.ShowSuccess("کاربر با موفقیت ذخیره شد");
        }
        catch (Exception ex)
        {
            toast.ShowError(ex.Message);
        }
    }
}
