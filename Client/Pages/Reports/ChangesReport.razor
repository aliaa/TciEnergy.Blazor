@page "/reports/changes"
@inject HttpClientX http

<div class="container">
    <h3>گزارش تغییرات قبوض</h3>

    <div class="row mt-5">
        <div class="col-md-3">
            <EditForm Model="model" OnValidSubmit="Submit">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <Label For="() => model.FieldName" />
                    <InputSelect @bind-Value="model.FieldName" class="form-control">
                        @foreach (var item in ChangesReportRequest.FieldNames)
                        {
                            <option value="@item">@DisplayUtils.DisplayName(typeof(ElecBill), item)</option>
                        }
                    </InputSelect>
                </div>
                <div class="form-group">
                    <Label For="() => model.CompareWith" />
                    <InputSelect @bind-Value="model.CompareWith" class="form-control">
                        @foreach (var item in DisplayUtils.GetEnumValues<ChangesReportRequest.CompareWithEnum>())
                        {
                            <option value="@item">@DisplayUtils.DisplayName(item)</option>
                        }
                    </InputSelect>
                </div>
                <div class="form-group">
                    <Label For="() => model.MinChangePercent" />
                    <InputNumber @bind-Value="model.MinChangePercent" class="form-control" />
                </div>
                <div class="form-group">
                    <input type="submit" class="btn btn-primary" value="تائید" />
                </div>
            </EditForm>
        </div>
        <div class="col-md-9">
            @if(loading)
            {
                <Loading />
            }
            else if (data != null)
            {
                <ObjectTable Data="data" FieldNames="columns" />
            }
        </div>
    </div>
</div>



@code {

    private bool loading = false;
    private ChangesReportRequest model = new ChangesReportRequest
    {
        MinChangePercent = 10
    };

    private static readonly string[] columns =
        new string[]
        {
            nameof(ClientElecBill.SubscriberName),
            nameof(ClientElecBill.SubscriberId),
            nameof(ClientElecBill.CityName),
            nameof(ElecBill.SubsNum),
            nameof(ElecBill.Year),
            nameof(ElecBill.Period),
            nameof(ChangesReportResponse.ChangesPercent)
        }
        .Concat(ChangesReportRequest.FieldNames)
        .ToArray();

    private List<ChangesReportResponse> data;

    private async Task Submit()
    {
        data = await http.PostAsJsonAsync<ChangesReportRequest, List<ChangesReportResponse>>("Report/Changes", model);
    }
}
